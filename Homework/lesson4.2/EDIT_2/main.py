# lesson4.2

# Задание 2
# Реализуйте класс стека для работы со строками (стек строк).
# Стек должен иметь фиксированный размер.
# Реализуйте набор операций для работы со стеком:
# ■ помещение строки в стек;
# ■ выталкивание строки из стека;
# ■ подсчет количества строк в стеке;
# ■ проверку пустой ли стек;
# ■ проверку полный ли стек;
# ■ очистку стека;
# ■ получение значения без выталкивания верхней строки
# из стека.
# При старте приложения нужно отобразить меню с помощью, которого
#  пользователь может выбрать необходимую операцию.

# Задание 3
# Измените стек из второго задания, таким образом, чтобы его размер был нефиксированным.

from classes import LimitedStack, NoLimitedStack

if __name__ == "__main__":
    print('-------------------------------------------')
    print('Приветствуем в стеке!')
    print('-------------------------------------------')
    first_choice = input('Открыть:\n1 - ограниченный стек;\n'
                             '2 - неограниченный стек;\n')
    if first_choice == '1':
        main_stack = LimitedStack()
    if first_choice == '2':
        main_stack = NoLimitedStack()
    while True:
        print('-------------------------------------------')
        print(f'Стек сейчас: {main_stack.data()}')
        print('-------------------------------------------')
        print('Меню команд:\n1 - помещение строки в стек;\n2 - выталкивание'
              'строки из стека;\n3 - подсчет количества строк в стеке;\n'
              '4 - проверка пустой ли стек;\n5 - проверка полный ли стек;\n'
              '6 - очистка стека;\n7 - получение значения без выталкивания'
              'верхней строки из стека;\n8 - выход')
        print('-------------------------------------------')
        main_choice = input()
        if main_choice == '1':
            newstr = input('Введите строку для добавления в стек:\n')
            print(main_stack.push(newstr))
        if main_choice == '2':
            print(main_stack.pop())
        if main_choice == '3':
            print(f'В стеке {main_stack.stack_lenght()} элементов')
        if main_choice == '4':
            if main_stack.empty_stack():
                print('Стек пустой!')
            else:
                print('Стек не пустой!')
        if main_choice == '5':
            if first_choice == '1':
                if main_stack.full_stack() == True:
                    print('Стек заполнен!')
                else:
                    print('Стек не заполнен!')
            else:
                print('Недопустимая операция!')
        if main_choice == '6':
            main_stack.cleaning()
            print('Стек очищен!')
        if main_choice == '7':
            print(f'Стек сейчас: {main_stack.data()}')
        if main_choice == '8':
            break
