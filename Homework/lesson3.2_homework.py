# lesson3.2

# Задание 1
# Напишите функцию, которая отображает на экран форматированный текст, 
# указанный на рисунку.

# Задание 2
# Напишите функцию, которая принимает два числа в качестве параметра и 
# отображает все четные числа между ними.

# Задание 3
# Напишите функцию, которая отображает пустой или заполненный квадрат из 
# некоторого символа. Функция принимает в качестве параметров: длину стороны 
# квадрата, символ и переменную логического типа:
# ■ если она равна True, квадрат заполненный;
# ■ если False, квадрат пустой.

# Задание 4
# Напишите функцию, которая возвращает минимальное из пяти чисел. 
# Числа передаются в качестве параметров.

# Задание 5
# Напишите функцию, которая возвращает произведение чисел в указанном
# диапазоне. Границы диапазона передаются в качестве параметров. Если границы 
# диапазона перепутаны (например, 5 — верхняя граница, 25 — нижняя граница), 
# их нужно поменять местами.

# Задание 6
# Напишите функцию, которая считает количество цифр в числе. Число передаётся в 
# качестве параметра. Из функции нужно вернуть полученное количество цифр. 
# Например, если передали 3456, количество цифр будет 4.

# Задание 7
# Напишите функцию, которая проверяет является ли число палиндромом. Число 
# передаётся в качестве параметра. Если число палиндром нужно вернуть из 
# функции true, иначе false. «Палиндром» — это число, у которого первая часть 
# цифр равна второй перевернутой части цифр. Например, 123321 — палиндром 
# (первая часть 123, вторая 321, которая после переворота становится 123), 
# 546645 — палиндром, а 421987 — не палиндром.


# Задание_1


def format_phrase(t1,t2):
    t3=f'"{t1}"'+('\n{:>50}'.format(t2))
    return(t3)


text="Don’t compare yourself with anyone in this world.\nIf you do so, you are insulting yourself."
author="Bill Gates"

print('----------------------------------------------------')
print(format_phrase(text, author))
print('----------------------------------------------------')


# Задание_2


def even (a, b):
    list_1=[]
    for i in range(a, b+1):
        if i%2==0:
            list_1.append(i)
    return(" ".join(map(str, list_1)))


print(even(4, 24))


# Задание_3


def square(symbol, length, paint):
    print('----------------------------------------------------')
    if paint == True and length>=1:
        sq_1=(str(symbol)*int(length))
        for i in range(length):
            print(sq_1)
    if paint == False and length>=1:
        sq_1=(str(symbol)*int(length))
        print(sq_1)
        if length>=3:
            space=length-2
            sq_2=f"{symbol}{(str(' ')*int(space))}{symbol}"
            for i in range(space):
                print(sq_2)
        print(sq_1)
    return('----------------------------------------------------')


print(square('#', 15, True))


# Задание_4


def minimal(a, b, c, d, e):
    return(min(a, b, c, d, e))


print(minimal(3, 5, 7, 8, 1))


# Задание_5


def product_of_numbers(a, b):
    if a>b:
        a, b = b, a
    result=1
    for i in range(a, b+1):
        result*=i
    return(result)


print (product_of_numbers(8, 3))


# Задание_6


def pallindrom(number):
    # В конце урока говорилось, что палиндромом есть, например, число 25752, а не 2552
    # в таком случае я бы сделал условие на проверку парного количества символов в строке
    # если непарное - проверяем 
    # Но раз в условии задачи другое просят, то делаем так как просят :) 
    string=str(number)
    reversed_string = string[::-1]
    return string == reversed_string
    

print(pallindrom(1489841))